<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Sabor do Brasil - Perfil do Usuário</title>

  <!-- Bootstrap 5 CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />

  <!-- Font Awesome -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />

  <style>
    body {
      font-family: 'Arial', sans-serif;
      background-color: #fff;
      color: #000;
      transition: background-color 0.3s ease, color 0.3s ease;
    }

    .navbar-brand {
      font-weight: bold;
      color: #ffc107 !important;
    }

    .logo-img {
      width: 45px;
      border-radius: 50%;
    }

    .card img {
      object-fit: cover;
      height: 300px;
    }

    .card-body {
      background-color: #fff8e1;
      transition: background-color 0.3s ease, color 0.3s ease;
    }

    .like-button, .dislike-button {
      cursor: pointer;
   
      background: none;
      border: none;
      font-size: 1.2rem;
      color: inherit;
      transition: transform 0.2s ease;
    }

    .like-button:hover:not(.liked), 
    .dislike-button:hover:not(.disliked) {
      transform: scale(1.1);
    }

    .liked {
      color: #0d6efd !important; /* azul bootstrap */
      cursor: default;
    }

    .disliked {
      color: #dc3545 !important; /* vermelho bootstrap */
      cursor: default;
    }

    .user-sidebar {
      border-right: 1px solid #ddd;
      transition: border-color 0.3s ease;
    }

    .right-sidebar {
      border-left: 1px solid #ddd;
      transition: border-color 0.3s ease;
    }

    .mode-toggle {
      position: fixed;
      bottom: 20px;
      right: 20px;
      z-index: 1050;
    }

    /* Modo escuro */
    body.dark-mode {
      background-color: #121212;
      color: #eee;
    }

    body.dark-mode .navbar {
      background-color: #000 !important;
    }

    body.dark-mode .card-body {
      background-color: #1e1e1e;
      color: #eee;
    }

    body.dark-mode .user-sidebar, 
    body.dark-mode .right-sidebar {
      border-color: #444;
    }

    body.dark-mode footer {
      background-color: #222;
      color: #ccc;
    }

    body.dark-mode .btn-link {
      color: #9ecfff;
    }
  </style>
</head>

<body>

  <!-- Cabeçalho estilo Instagram -->
  <header class="navbar navbar-dark bg-black sticky-top px-3 shadow-sm justify-content-between">
    <a class="navbar-brand" href="#">Sabor do Brasil</a>

    <div class="d-flex align-items-center gap-3">
      <!-- Ícones do menu -->
      <a href="#" class="text-white" aria-label="Página Inicial"><i class="fas fa-home"></i></a>
      <a href="#" class="text-white" aria-label="Buscar"><i class="fas fa-search"></i></a>
      <a href="#" class="text-white" aria-label="Adicionar publicação"><i class="fas fa-plus-square"></i></a>
      <a href="#" class="text-white" aria-label="Perfil"><i class="fas fa-user-circle"></i></a>

      <!-- Foto do usuário -->
      <img src="img/user1.jpg" alt="Foto do usuário" class="rounded-circle" width="32" height="32" style="object-fit: cover;">
    </div>
  </header>

  <main class="container-fluid">
    <div class="row min-vh-100">

      <!-- Sidebar do usuário -->
      <aside class="col-md-2 bg-white text-center py-4 user-sidebar">
        <img src="img/user1.jpg" class="rounded-circle mb-3" width="90" alt="Foto do usuário">
        <h5 class="mt-2">User</h5>
        <hr>
        <p><strong id="totalLikes">456</strong><br>Likes</p>
        <p><strong id="totalDislikes">20</strong><br>Dislikes</p>
      </aside>

      <!-- Conteúdo principal -->
      <section class="col-md-8 p-4">
        <h3 class="text-center fw-bold mb-4">Minhas Publicações</h3>

        <div class="row row-cols-1 row-cols-md-2 g-4">

          <!-- Publicação 1 -->
          <div class="col">
            <div class="card" data-post-id="1">
              <img src="img/feij.webp" class="card-img-top" alt="Feijoada">
              <div class="card-body">
                <h5 class="card-title">Feijoada</h5>
                <p class="card-text">Local 01 - Brasil</p>
                <div class="d-flex align-items-center gap-3">
                  <button class="like-button" aria-label="Curtir">
                    <i class="fas fa-thumbs-up"></i>
                  </button>
                  <span class="like-count">288</span>
                  <button class="dislike-button" aria-label="Discurtir">
                    <i class="fas fa-thumbs-down"></i>
                  </button>
                  <span class="dislike-count">10</span>
                  <button class="btn btn-link p-0 comment-button" data-post-id="1" aria-label="Comentários">
                    <i class="far fa-comment"></i> <span class="comment-count">8</span>
                  </button>
                </div>
              </div>
            </div>
          </div>

          <!-- Publicação 2 -->
          <div class="col">
            <div class="card" data-post-id="2">
              <img src="img/picanha.jpg" class="card-img-top" alt="Picanha na Brasa">
              <div class="card-body">
                <h5 class="card-title">Picanha na Brasa</h5>
                <p class="card-text">Local 02 - Rio Grande do Sul</p>
                <div class="d-flex align-items-center gap-3">
                  <button class="like-button" aria-label="Curtir">
                    <i class="fas fa-thumbs-up"></i>
                  </button>
                  <span class="like-count">288</span>
                  <button class="dislike-button" aria-label="Discurtir">
                    <i class="fas fa-thumbs-down"></i>
                  </button>
                  <span class="dislike-count">10</span>
                  <button class="btn btn-link p-0 comment-button" data-post-id="2" aria-label="Comentários">
                    <i class="far fa-comment"></i> <span class="comment-count">3</span>
                  </button>
                </div>
              </div>
            </div>
          </div>

        </div>
      </section>

      <!-- Área lateral direita -->
      <aside class="col-md-2 bg-white text-center py-4 right-sidebar">
        <a href="index.html" class="btn btn-danger w-75 mb-3" role="button">Sair</a>
      </aside>
    </div>
  </main>

  <!-- Modal de Comentários -->
  <div class="modal fade" id="commentModal" tabindex="-1" aria-labelledby="commentModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="commentModalLabel">Comentários</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
        </div>
        <div class="modal-body">
          <ul id="commentList" class="list-group mb-3"></ul>
          <form id="commentForm">
            <div class="mb-3">
              <textarea id="commentText" class="form-control" rows="3" placeholder="Escreva um comentário..." required></textarea>
            </div>
            <button type="submit" class="btn btn-primary w-100">Enviar</button>
          </form>
        </div>
      </div>
    </div>
  </div>

  <!-- Botão de modo escuro -->
  <button class="btn btn-dark mode-toggle" aria-label="Alternar modo escuro" title="Alternar modo escuro">🌙</button>

  <!-- Rodapé -->
  <footer class="text-center py-4 bg-dark text-white">
    <div class="container">
      <div class="mb-3">
        <a href="https://www.instagram.com/seu_usuario/" target="_blank" class="text-white me-3" title="Instagram" rel="noopener noreferrer">
          <i class="fab fa-instagram fa-lg"></i>
        </a>
        <a href="https://github.com/vitoriacandido/AtividadeAvaliativa22-03.git" target="_blank" class="text-white me-3" title="GitHub" rel="noopener noreferrer">
          <i class="fab fa-github fa-lg"></i>
        </a>
        <a href="https://www.facebook.com/seu_usuario" target="_blank" class="text-white" title="Facebook" rel="noopener noreferrer">
          <i class="fab fa-facebook fa-lg"></i>
        </a>
      </div>
      <p class="mb-1">&copy; 2025 - Sabor do Brasil</p>
    </div>
  </footer>

  <!-- Bootstrap JS + Popper -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

  <!-- JavaScript de interações -->
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const likedPosts = new Set(JSON.parse(localStorage.getItem('likedPosts') || '[]'));
      const dislikedPosts = new Set(JSON.parse(localStorage.getItem('dislikedPosts') || '[]'));
      const commentsData = JSON.parse(localStorage.getItem('commentsData') || '{}');

      // Atualiza o total de likes e dislikes na sidebar
      function updateSidebarTotals() {
        let totalLikes = 0;
        let totalDislikes = 0;
        document.querySelectorAll('.like-count').forEach(el => {
          totalLikes += parseInt(el.textContent) || 0;
        });
        document.querySelectorAll('.dislike-count').forEach(el => {
          totalDislikes += parseInt(el.textContent) || 0;
        });
        document.getElementById('totalLikes').textContent = totalLikes.toLocaleString('pt-BR');
        document.getElementById('totalDislikes').textContent = totalDislikes.toLocaleString('pt-BR');
      }

      // Salva dados no localStorage
      function saveStorage() {
        localStorage.setItem('likedPosts', JSON.stringify([...likedPosts]));
        localStorage.setItem('dislikedPosts', JSON.stringify([...dislikedPosts]));
        localStorage.setItem('commentsData', JSON.stringify(commentsData));
      }

      // Inicializa estado dos botões like/dislike
      document.querySelectorAll('.card').forEach(card => {
        const postId = card.getAttribute('data-post-id');

        const likeBtn = card.querySelector('.like-button');
        const dislikeBtn = card.querySelector('.dislike-button');

        if (likedPosts.has(postId)) {
          likeBtn.classList.add('liked');
          likeBtn.disabled = true;
        }
        if (dislikedPosts.has(postId)) {
          dislikeBtn.classList.add('disliked');
          dislikeBtn.disabled = true;
        }

        likeBtn.addEventListener('click', () => {
          if (likedPosts.has(postId)) return; // já curtiu, não faz nada

          // Se descurtiu antes, remove o dislike
          if (dislikedPosts.has(postId)) {
            dislikedPosts.delete(postId);
            dislikeBtn.classList.remove('disliked');
            dislikeBtn.disabled = false;

            const dislikeCountSpan = dislikeBtn.nextElementSibling;
            dislikeCountSpan.textContent = (parseInt(dislikeCountSpan.textContent) - 1).toString();
          }

          // Adiciona like
          likedPosts.add(postId);
          likeBtn.classList.add('liked');
          likeBtn.disabled = true;

          const likeCountSpan = likeBtn.nextElementSibling;
          likeCountSpan.textContent = (parseInt(likeCountSpan.textContent) + 1).toString();

          saveStorage();
          updateSidebarTotals();
        });

        dislikeBtn.addEventListener('click', () => {
          if (dislikedPosts.has(postId)) return; // já descurtiu, não faz nada

          // Se curtiu antes, remove o like
          if (likedPosts.has(postId)) {
            likedPosts.delete(postId);
            likeBtn.classList.remove('liked');
            likeBtn.disabled = false;

            const likeCountSpan = likeBtn.nextElementSibling;
            likeCountSpan.textContent = (parseInt(likeCountSpan.textContent) - 1).toString();
          }

          // Adiciona dislike
          dislikedPosts.add(postId);
          dislikeBtn.classList.add('disliked');
          dislikeBtn.disabled = true;

          const dislikeCountSpan = dislikeBtn.nextElementSibling;
          dislikeCountSpan.textContent = (parseInt(dislikeCountSpan.textContent) + 1).toString();

          saveStorage();
          updateSidebarTotals();
        });
      });

      // Comentários
      let currentPostId = null;
      const commentModal = new bootstrap.Modal(document.getElementById('commentModal'));
      const commentList = document.getElementById('commentList');
      const commentForm = document.getElementById('commentForm');
      const commentText = document.getElementById('commentText');

      // Abrir modal com comentários
      document.querySelectorAll('.comment-button').forEach(button => {
        button.addEventListener('click', () => {
          currentPostId = button.getAttribute('data-post-id');
          loadComments(currentPostId);
          commentModal.show();
        });
      });

      function loadComments(postId) {
        commentList.innerHTML = '';
        const comments = commentsData[postId] || [];
        if (comments.length === 0) {
          commentList.innerHTML = '<li class="list-group-item text-muted">Sem comentários ainda.</li>';
        } else {
          comments.forEach(c => {
            const li = document.createElement('li');
            li.className = 'list-group-item';
            li.textContent = c;
            commentList.appendChild(li);
          });
        }
      }

      commentForm.addEventListener('submit', e => {
        e.preventDefault();
        const text = commentText.value.trim();
        if (!text) return;

        if (!commentsData[currentPostId]) {
          commentsData[currentPostId] = [];
        }
        commentsData[currentPostId].push(text);
        saveStorage();

        loadComments(currentPostId);
        updateCommentCount(currentPostId);

        commentText.value = '';
      });

      function updateCommentCount(postId) {
        const commentBtn = document.querySelector(`.comment-button[data-post-id="${postId}"]`);
        if (!commentBtn) return;

        const countSpan = commentBtn.querySelector('.comment-count');
        const count = commentsData[postId]?.length || 0;
        countSpan.textContent = count;
      }

      // Inicializa as contagens dos comentários ao carregar página
      document.querySelectorAll('.comment-button').forEach(button => {
        const pid = button.getAttribute('data-post-id');
        updateCommentCount(pid);
      });

      // Atualiza os totais da sidebar no carregamento
      updateSidebarTotals();

      // Modo escuro
      const modeToggleBtn = document.querySelector('.mode-toggle');
      const darkModeKey = 'darkMode';

      function applyDarkMode(enabled) {
        if (enabled) {
          document.body.classList.add('dark-mode');
          modeToggleBtn.textContent = '☀️';
        } else {
          document.body.classList.remove('dark-mode');
          modeToggleBtn.textContent = '🌙';
        }
      }

      modeToggleBtn.addEventListener('click', () => {
        const isDark = document.body.classList.toggle('dark-mode');
        if (isDark) {
          localStorage.setItem(darkModeKey, 'enabled');
          modeToggleBtn.textContent = '☀️';
        } else {
          localStorage.removeItem(darkModeKey);
          modeToggleBtn.textContent = '🌙';
        }
      });

      // Aplica o modo escuro se estava ativado anteriormente
      if (localStorage.getItem(darkModeKey) === 'enabled') {
        applyDarkMode(true);
      } else {
        applyDarkMode(false);
      }
    });
  </script>
</body>
</html>